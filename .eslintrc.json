{
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "node": true
  },
  "extends": ["airbnb"],
  "parser": "@babel/eslint-parser",
  "requireConfigFile": false,
  "parserOptions": {
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "overrides": [
    {
      "files": ["*.jsx", "*.js"],
      "rules": {
        "no-unused-expressions": 0,
        "no-undef": 0,
        "max-len": 0,
        "jsx-a11y/anchor-is-valid": 0,
        "no-restricted-globals": 0,
        "no-labels": 0
      },
    }
  ],
  "rules": {
    "no-return-await": "off", // Разрешить возвращать await в асинхронных функциях
    "operator-linebreak": [
      // Правило для управления переносами строк вокруг операторов
      "error", // Уровень ошибки
      "before", // Разрывать строки перед операторами
      {
        "overrides": {
          // Переопределения для определённых операторов
          "?": "before", // Перенос строки перед оператором `?`
          ":": "before" // Перенос строки перед оператором `:`
        }
      }
    ],
    "arrow-parens": [
      "error",
      "as-needed"
    ],

    "no-shadow": "off", // Отключает правило, которое запрещает объявление переменных в локальной области видимости с теми же именами, что и переменные во внешней области видимости (shadowing).

    "no-nested-ternary": "off", // Отключает правило, запрещающее использование вложенных тернарных операторов (?:).

    "no-prototype-builtins": "off", // Отключает правило, запрещающее прямое использование методов прототипа объектов, таких как hasOwnProperty, из-за возможных конфликтов с пользовательскими свойствами.

    "jsx-a11y/anchor-is-valid": 0, // Отключает проверку на допустимость использования тегов <a>, особенно в случаях, когда href отсутствует или некорректен (например, для использования в роутинге SPA).

    "react/prefer-stateless-function": 0, // Отключает правило, которое требует использовать статические компоненты (без состояния), если не используется состояние или жизненные методы.

    "react/jsx-no-undef": 0, // Отключает правило, запрещающее использование необъявленных компонентов в JSX.

    "react/react-in-jsx-scope": 0, // Отключает правило, требующее импортировать React в каждом файле, использующем JSX. Это актуально для новых версий React, где импорт React не обязателен.

    "react/jsx-boolean-value": 0, // Отключает правило, которое требует явного указания значения для булевых пропсов (например, <Component prop={true}> вместо <Component prop>).

    "react/jsx-props-no-spreading": 0, // Отключает правило, запрещающее использование оператора расширения (spread operator) для передачи пропсов в JSX.

    "template-curly-spacing": ["error", "never"], // Создает ошибку, если внутри фигурных скобок шаблонных строк присутствуют пробелы.

    "jsx-a11y/click-events-have-key-events": 0, // Отключает требование, чтобы элементы с обработчиками событий click также имели обработчики событий клавиатуры для доступности.

    "jsx-a11y/no-noninteractive-element-interactions": 0, // Отключает правило, запрещающее использование интерактивных событий (например, onClick) на неинтерактивных элементах, таких как <div>.

    "jsx-a11y/no-static-element-interactions": 0, // Отключает правило, запрещающее использование событий на статических элементах (например, <div>, <span>).

    "react/destructuring-assignment": 0, // Отключает требование использовать деструктуризацию при доступе к пропсам, состоянию или контексту в React.

    "react/prop-types": "off", // Отключает проверку типов пропсов в компонентах React.

    "react/no-array-index-key": 0, // Отключает предупреждение о использовании индекса массива в качестве ключа для элементов списка.

    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [".js", ".jsx"]
      }
    ], // Разрешает использование JSX в файлах с расширением .js и .jsx.

    "comma-dangle": ["error", "only-multiline"], // Требует запятую в конце последнего элемента в многострочных объектах и массивах.

    "max-len": [
      "warn",
      {
        "code": 120,
        "ignoreStrings": true
      }
    ], // Выдает предупреждение, если длина строки превышает 120 символов, но игнорирует длину строк.

    "semi": ["error", "always"], // Требует ставить точку с запятой в конце каждой инструкции.

    "no-unused-vars": [
      "error",
      {
        "args": "none"
      }
    ], // Создает ошибку, если в коде есть неиспользуемые переменные, кроме параметров функций.

    "lines-between-class-members": ["error", "always"], // Требует пустую строку между методами и свойствами в классах.

    "keyword-spacing": [
      "error",
      {
        "after": true,
        "before": true
      }
    ], // Требует пробелы перед и после ключевых слов (например, if, else, return).

    "object-curly-newline": [
      "error",
      {
        "consistent": true
      }
    ], // Требует, чтобы переносы в фигурных скобках были консистентными, т.е. или все элементы в одной строке, или каждый на новой строке.

    "import/extensions": [
      1,
      "ignorePackages",
      {
        "jsx": "always",
        "js": "never",
        "ts": "never",
        "tsx": "never"
      }
    ], // Требует указывать расширения для файлов jsx, но не требует их для js, ts и tsx.

    "max-statements-per-line": [
      "error",
      {
        "max": 1
      }
    ], // Ограничивает количество инструкций в одной строке до одной.

    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": true,
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ], // Запрещает импорт модулей, не указанных в dependencies в package.json, за исключением devDependencies.

    "arrow-spacing": "error", // Требует пробелы до и после стрелки в стрелочных функциях.

    "prefer-template": "warn", // Рекомендует использование шаблонных строк вместо конкатенации строк.

    "import/prefer-default-export": 0, // Отключает правило, требующее использовать экспорт по умолчанию, если экспортируется только один элемент.

    "no-restricted-syntax": 0, // Отключает запрет на использование определенных синтаксических конструкций, таких как for-in, for-of и другие.

    "consistent-return": 0, // Отключает требование возвращать значение из функции во всех ветках кода.

    "arrow-body-style": 0, // Отключает требование всегда использовать тело функции в стрелочных функциях.

    "prefer-object-spread": 0, // Отключает правило, рекомендующее использовать оператор расширения {...obj} вместо Object.assign.

    "radix": 0, // Отключает требование явно указывать радиус (основание системы счисления) в методе parseInt.

    "prefer-destructuring": 0, // Отключает требование использовать деструктуризацию при обращении к элементам массива или объектам.

    "no-underscore-dangle": 0, // Отключает правило, запрещающее использование имен переменных, начинающихся с подчеркивания (например, _var).

    "no-plusplus": 0, // Отключает запрет на использование инкремента (++) и декремента (--).

    "no-console": 0, // Отключает запрет на использование console.log и других методов console.

    "no-continue": 0, // Отключает запрет на использование оператора continue в циклах.

    "no-use-before-define": 0, // Отключает правило, запрещающее использование переменных и функций до их объявления.

    "no-confusing-arrow": 0, // Отключает правило, запрещающее использование стрелочных функций, которые могут быть неправильно интерпретированы.

    "no-bitwise": 0, // Отключает запрет на использование побитовых операций.

    "no-debugger": 0, // Отключает запрет на использование оператора debugger.

    "linebreak-style": 0, // Отключает проверку стиля переноса строк (например, LF или CRLF).

    "no-param-reassign": 0, // Отключает правило, запрещающее переназначение параметров функции.

    "class-methods-use-this": 0, // Отключает требование использовать ключевое слово this в методах класса.

    "guard-for-in": 0, // Отключает требование проверять свойство объекта в цикле for-in с использованием метода hasOwnProperty.

    "no-await-in-loop": 0, // Отключает запрет на использование await внутри циклов.

    "default-case": 0, // Отключает требование всегда включать блок default в switch операторах.

    "import/no-unresolved": 0 // Отключает правило, которое проверяет, что все импорты могут быть разрешены (модули должны существовать).
  }
}
